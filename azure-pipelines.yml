
strategy:
  matrix:
    ubuntu-py36:
      imageName: 'ubuntu-latest'
      pythonVersion: '3.6'
    ubuntu-py37:
      imageName: 'ubuntu-latest'
      pythonVersion: '3.7'
    ubuntu-py38:
      imageName: 'ubuntu-latest'
      pythonVersion: '3.8'
    macos-py36:
      imageName: 'macos-latest'
      pythonVersion: '3.6'
    macos-py37:
      imageName: 'macos-latest'
      pythonVersion: '3.7'
    macos-py38:
      imageName: 'macos-latest'
      pythonVersion: '3.8'
    windows-py36:
      imageName: 'windows-latest'
      pythonVersion: '3.6'
    windows-py37:
      imageName: 'windows-latest'
      pythonVersion: '3.7'
    windows-py38:
      imageName: 'windows-latest'
      pythonVersion: '3.8'

pool:
  vmImage: $(imageName)

trigger:
- master

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: $(pythonVersion)
    architecture: 'x64'

- script: python -m pip install -U pytest pytest-azurepipelines pytest-cov
  displayName: 'Install dependencies'

- script: python -m pip install -e .
  displayName: 'Install library'

- script: pytest tests --junitxml=test-results.xml --cov chapter10 --cov-report html
  displayName: 'Run tests'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/test-results.xml'
    testRunTitle: 'Python $(python.version)'
  condition: succeededOrFailed()
